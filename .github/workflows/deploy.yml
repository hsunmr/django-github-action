name: deploy

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/Checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Python syntax check
        run: |
          python3 -V
          pip3 install Flake8
          echo "Run flake8"
          flake8 .

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/Checkout@v4

      - name: Set up python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip3 install -r requirements.txt
          deactivate

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          path: .venv

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/Checkout@v4

      - name: Set up python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Restore cached python dependencies
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          path: .venv

      - name: Run tests
        run: |
          source .venv/bin/activate
          python3 manage.py test
          deactivate

  package-release:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/Checkout@v4

      - name: Build and push the image
        run: |
          docker login --username ${{ vars.USERNAME }} --password ${{ secrets.GH_PAT }} ghcr.io
          docker build -t ghcr.io/${{ vars.USERNAME }}/django_github_action:${{ github.sha }} .
          docker push ghcr.io/${{ vars.USERNAME }}/django_github_action:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: package-release
    steps:
      - name: deploy
        run: |
          echo "deploy"
